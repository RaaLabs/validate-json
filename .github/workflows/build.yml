name: Build Docker Image

env:
  PRERELEASE_BRANCHES: experimental,alpha,beta,rc # Comma separated list of prerelease branch names. 'alpha,rc, ...'

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [ closed ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      should-publish: ${{ steps.context.outputs.should-publish }}
      current-version: ${{ steps.context.outputs.current-version }}
      release-type: ${{ steps.context.outputs.release-type }}
      cascading-release: ${{ steps.context.outputs.cascading-release }}

    steps:
    - name: Establish context
      id: context
      uses: dolittle/establish-context-action@v2
      with:
        prerelease-branches: ${{ env.PRERELEASE_BRANCHES }}

    - uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker Build
      if: ${{ steps.context.outputs.should-publish == 'false' }}
      shell: bash
      run: |
          docker build -f Dockerfile -t testbuild .

    - name: Increment version
      id: increment-version
      if: ${{ steps.context.outputs.should-publish == 'true' }}
      uses: dolittle/increment-version-action@v2
      with:
        version: ${{ steps.context.outputs.current-version }}
        release-type: ${{ steps.context.outputs.release-type }}

    - name: Build & push Docker Images
      if: ${{ steps.context.outputs.should-publish == 'true' }}
      shell: bash
      run: |
        docker build -f Dockerfile -t raalabs/validate-json:${{ steps.increment-version.outputs.next-version }} -t raalabs/validate-json:latest .
        docker push raalabs/validate-json:${{ steps.increment-version.outputs.next-version }}
        docker push raalabs/validate-json:latest
        docker logout

    - name: Create GitHub Release
      uses: dolittle/github-release-action@v1
      if: ${{ steps.context.outputs.should-publish == 'true' }}
      with:
        cascading-release: ${{ steps.context.outputs.cascading-release }}
        version: ${{ steps.increment-version.outputs.next-version }}
        body: ${{ steps.context.outputs.pr-body }}
